# Identificador único del proyecto en SonarQube
sonar.projectKey=dusk-sky-microservices

# Nombre que aparecerá en la interfaz de SonarQube
sonar.projectName=Dusk Sky Microservices

# Versión del proyecto (opcional)
sonar.projectVersion=1.0.0

# --- Rutas a los directorios que contienen el código fuente ---
# Cada línea es una ruta a un microservicio.
# Las rutas son RELATIVAS a la ubicación de este archivo sonar-project.properties.

# Servicios Python (con carpeta 'app')
sonar.sources=\
    AuthService/app,\
    FriendshipService/app,\
    ReviewService/app,\
    UserManagerService/app

# Servicios C# (.NET) (con carpeta '.Api')
# Algunos servicios C# no tienen la carpeta .Api. Vamos a ajustarlo.
sonar.sources=\
    AuthService/app,\
    CommentService/CommentService.Api,\
    FriendshipService/app,\
    GameListService/GameListService.Api,\
    GameService,\
    ModerationService/ModerationService.Api,\
    ReviewService/app,\
    UserGameTrackingService,\
    UserManagerService/app

# Excluir directorios y archivos que no deben ser analizados o que son generados/temporales.
# Esto es crucial para proyectos C# (.NET) y Python.
sonar.exclusions=\
    # Exclusiones globales del monorepo
    .env,\
    1,\
    docker,\
    docker-compose*.yml,\
    README.md,\
    repo_structure.txt,\
    **/node_modules/**,\
    **/bin/**,\
    **/obj/**,\
    **/target/**,\
    **/venv/**,\
    **/__pycache__/**,\
    **/*.log,\
    **/*.lockb,\
    **/*.lock,\
    **/TestResults/**,\
    **/*.dll,\
    **/*.pdb,\
    **/*.exe,\
    **/nginx/**,\
    **/ScriptsMongo/**,\
    **/static_user_content/**,\
    # Exclusiones específicas de servicios
    AuthService/.pytest_cache/**,\
    AuthService/.venv/**,\
    AuthService/tests/**,\
    CommentService/CommentService.Api/Properties/**,\
    GameListService/GameListService.Api/Properties/**,\
    GameService/bin/**,\
    GameService/obj/**,\
    GameService/data/**,\
    GameService/Properties/**,\
    ModerationService/Database/**,\
    ModerationService/ModerationService.Api/.config/**,\
    ModerationService/ModerationService.Api/Migrations/**,\
    ModerationService/ModerationService.Api/Properties/**,\
    ReviewService/test/**,\
    UserGameTrackingService/bin/**,\
    UserGameTrackingService/obj/**,\
    UserGameTrackingService/Properties/**,\
    UserManagerService/.venv/**,\
    UserManagerService/.pytest_cache/** # Asegúrate de si UserManagerService tiene tests y .pytest_cache

# Lenguajes a analizar. SonarQube detectará automáticamente, pero es bueno ser explícito.
sonar.language=cs,py

# Configuración del servidor de SonarQube
sonar.host.url=http://localhost:9000


sonar.token=sqa_691d5c47ce88ef074d060bceec48f13a59637b5e